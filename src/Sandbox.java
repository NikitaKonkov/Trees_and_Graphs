

public class Sandbox {


    public static int[] TreeIndexGenerator(int n){
        int[] arr = new int[(0b1 << n+1)-1];
        int start = (int) (Math.pow(2,n)-1);
        arr[0] = start;
        //System.out.println(start);
        int glo = 1;
        int cor = n-1;
        int sta = (int) Math.pow(2,n);
        int exp = 0;
        int itr = 2;
        for (int y = 0; y < n+cor; y++) {
            for (int x = 0; x < itr; x++) {
                //System.out.print((int) (Math.pow(2, n - 1) - 1) + exp + " ");
                arr[glo] = (int) (Math.pow(2, n - 1) - 1) + exp;
                glo++;
                exp += sta;
            }
            //System.out.println();
            sta /= 2;
            exp = 0;
            n--;
            itr *= 2;
        }

        return arr;


    }
    public static void main(String[] args) {
            for ( int x : TreeIndexGenerator(5)) System.out.print(x+" ");

    }
}

// 255 byte key example tree

//   2 ______________________________________________________________01______________________________________________________________________________________________________________________________02______________________________________________________________________________________________________________________________01______________________________________________________________________________________________________________________________02______________________________________________________________


//  16 ______14______________15______________16______________17______________18______________19______________20______________21______________22______________23______________24______________25______________26______________27______________28______________29______________14______________15______________16______________17______________18______________19______________20______________21______________22______________23______________24______________25______________26______________27______________28______________29______
//  32 __30______31______32______33______34______35______36______37______38______39______40______41______42______43______44______45______46______47______48______49______50______51______52______53______54______55______56______57______58______59______60______71______30______31______32______33______34______35______36______37______38______39______40______41______42______43______44______45______46______47______48______49______50______51______52______53______54______55______56______57______58______59______60______71__
//  64 72__73__74__75__76__77__78__79__80__81__82__83__84__85__86__87__88__89__90__91__92__93__94__95__96__97__98__99__0A__0B__0C__0D__0E__0F__0G__0H__0I__0J__0K__0L__0M__0N__0O__0P__0Q__0R__0S__0T__0U__0V__0W__0X__0Y__0Z__0a__0b__0c__0d__0e__0f__0g__0h__0i__0j__72__73__74__75__76__77__78__79__80__81__82__83__84__85__86__87__88__89__90__91__92__93__94__95__96__97__98__99__0A__0B__0C__0D__0E__0F__0G__0H__0I__0J__0K__0L__0M__0N__0O__0P__0Q__0R__0S__0T__0U__0V__0W__0X__0Y__0Z__0a__0b__0c__0d__0e__0f__0g__0h__0i__0j
// 128 012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123
//     0         1         2         3         4         5         6         7         8         9         10        11        12        13        14        15        16        17        18        19        20        21        22        23        24        25        26        27        28        29        30        31        32        33        34        35        36        37        38        39        40        15        16        17        18        19        20        21        22        23        24        25

// 132 FINAL KEY AFTER ASSEMBLY + HASH BYTE = 16x16 ENCODED MATRIX.



//  +---+------------------------------------------------------------------------------------------------+
//  |hex|  00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  |
//  +---+------------------------------------------------------------------------------------------------+
//  | 0 |                       _______________________[00]_______________________                       |
//  | 1 |           ___________[0 1]___________                    ___________[0 2]___________           |
//  | 2 |     _____[0 3]_____    |    _____[0 4]_____        _____[0 5]_____    |    _____[0 6]_____     |
//  | 3 |  __[0 7]__ | __[0 8]__ | __[0 9]__ | __[1 0]__  __[1 1]__ | __[1 2]__ | __[1 3]__ | __[1 4]__  |
//  | 4 | [1 5]|[1 6]|[1 7]|[1 8]|[1 9]|[2 0]|[2 1]|[2 2][2 3]|[2 4]|[2 5]|[2 6]|[2 7]|[2 8]|[2 9]|[3 0] |
//  +---+------------------------------------------------------------------------------------------------+
//  | = |  15 07 16 03 17 08 18 01 19 09 20 04 21 10 22 00 23 11 24 05 25 12 26 02 27 13 28 06 29 14 30  |
//  +---+------------------------------------------------------------------------------------------------+

